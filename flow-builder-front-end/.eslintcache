[{"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/index.js":"1","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/reportWebVitals.js":"2","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/App.js":"3","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/BaseLayout/BaseLayout.js":"4","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/BaseLayout/Data.js":"5","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/FlowDisplay/FlowDisplay.js":"6","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/FlowDisplay/initial-elements.js":"7","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/Chips.js":"8","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/ComplexitySlider.js":"9","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/FocusSlider.js":"10","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/BaseLayout/BaseLayout.style.js":"11","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/SequenceStepper.js":"12","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/Countdown.js":"13","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/ToggleSwitch.js":"14","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/Sequence.style.js":"15"},{"size":500,"mtime":1607537687887,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1607537687888,"results":"18","hashOfConfig":"17"},{"size":1797,"mtime":1638480463279,"results":"19","hashOfConfig":"17"},{"size":12260,"mtime":1637945023915,"results":"20","hashOfConfig":"17"},{"size":3453,"mtime":1637797962449,"results":"21","hashOfConfig":"17"},{"size":1396,"mtime":1607627136639,"results":"22","hashOfConfig":"17"},{"size":1905,"mtime":1607627078218,"results":"23","hashOfConfig":"17"},{"size":2170,"mtime":1635632973016,"results":"24","hashOfConfig":"17"},{"size":829,"mtime":1635626920476,"results":"25","hashOfConfig":"17"},{"size":791,"mtime":1635630560203,"results":"26","hashOfConfig":"17"},{"size":1909,"mtime":1637036340575,"results":"27","hashOfConfig":"17"},{"size":2584,"mtime":1638480836762,"results":"28","hashOfConfig":"17"},{"size":1045,"mtime":1636321604509,"results":"29","hashOfConfig":"17"},{"size":791,"mtime":1636904722231,"results":"30","hashOfConfig":"17"},{"size":289,"mtime":1638480610432,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k6irfw",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/index.js",[],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/reportWebVitals.js",[],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/App.js",["69","70","71","72","73","74","75"],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/BaseLayout/BaseLayout.js",["76","77","78","79","80"],"import React, { useState, createContext, useContext } from 'react';\nimport clsx from 'clsx';\nimport { useTheme, createTheme, ThemeProvider, styled  } from '@mui/material/styles';\nimport Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ComplexitySlider from '../Components/ComplexitySlider'\nimport FocusSlider from '../Components/FocusSlider';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport TagIcon from '@mui/icons-material/Tag';\nimport useStyles from './BaseLayout.style';\nimport SequenceStepper from '../Components/SequenceStepper'\nimport combinations from './Data';\nimport Timer from '../Components/Countdown';\nimport Alarm from '../static/Alarm.m4a';\nimport ToggleSwitch from '../Components/ToggleSwitch';\nimport Switch from '@mui/material/Switch';\nimport Box from '@mui/material/Box';\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\n\nexport default function BaseLayout(props) {\n  const {\n      ColorModeContext\n    } = props\n  const theme = useTheme()\n  const colorMode = useContext(ColorModeContext);\n\n  \n  const classes = useStyles();\n  // const theme = useTheme();\n  const timerSound = new Audio(Alarm);\n\n  const [open, setOpen] = useState(true);\n  const [sequenceVal, setSequenceVal] = useState(1);\n  const [timePerSequence, setTimePerSequence] = useState(45);\n  const [complexityValue, setComplexityValue] = useState(30);\n  const [focusValue, setFocusValue] = useState(10);\n  const [renderStepper, setRenderStepper] = useState(false);\n  const [combos, setCombos] = React.useState([]);\n  const [timer, setTimer] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [checked, setChecked] = useState(true);\n\n  console.log('active step in base: ', activeStep)\n  let utterance = new SpeechSynthesisUtterance(`Sequence ${activeStep+1}`);\n  const declareSequence = () => speechSynthesis.speak(utterance)\n\n  \n  const amountArr = Array.from({length: 10}, (_, index) => index + 1);\n  const range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step));\n  \n  const timeArr = range(45, 360, 5)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleNumofSeqChange = (event) => {\n    setSequenceVal(event.target.value);\n  };\n\n  const handletimePerSequenceChange = (event) => {\n    setTimePerSequence(event.target.value);\n  };\n\n  const handleToggleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const buildFlow = () => {\n    console.log(`\n                number of squences: ${sequenceVal}\\n\n                time per sequence: ${timePerSequence}\\n\n                complexity value: ${complexityValue}\\n\n                focus value: ${focusValue}\n              `)\n    setRenderStepper(true)\n    makeArr(sequenceVal, complexityValue)\n    setTimer(true)\n  }\n\n  const makeCombos = (complexityV) => {\n    // value will come from slider and will determine how complex the combos are\n\n    // take complexity value and give it a specific number based on a range\n    const roundedCompV = Math.round(complexityV / 10) * 10\n    \n    const positionalCombos = combinations.positionalCombos\n    const techniqueCombos = combinations.techniqueCombos\n    const combos1 = () => positionalCombos()+` - `+techniqueCombos()\n    const combos2 = () => combos1()+` - `+positionalCombos()\n    const combos3 = () => combos1()+` - `+techniqueCombos()\n    const combos4 = () => combos1()+` - `+combos1()\n    const combos5 = () => combos1()+` - `+combos3()\n\n    const randomPick = (arr) => {\n      const pick = arr[Math.floor(Math.random()*arr.length)]\n      return pick \n    }\n\n    const values = {\n      0: randomPick([positionalCombos(),techniqueCombos()]),\n      10: randomPick([positionalCombos(),techniqueCombos(),combos1()]),\n      20: combos1(),\n      30: randomPick([combos1(),combos2()]),\n      40: randomPick([combos1(),combos2(),combos3()]),\n      50: randomPick([combos1(),combos2(),combos3(),combos4()]),\n      60: randomPick([combos2(),combos3(),combos4()]),\n      70: randomPick([combos2(),combos3(),combos4(),combos5()]),\n      80: randomPick([combos2(),combos3(),combos4(),combos5()])+` - `+combos1(),\n      90: randomPick([combos4(),combos5()])+` - `+randomPick([combos2(),combos3()]),\n      100: randomPick([combos4(),combos5()])+` - `+randomPick([combos4(),combos5()])\n    }\n    return values[roundedCompV]\n  }\n\n  const makeBodyCombos = (complexityV) => {\n    // value will come from slider and will determine how complex the combos are\n\n    // take complexity value and give it a specific number based on a range\n    const roundedCompV = Math.round(complexityV / 10) * 10\n\n    const randomPick = (arr) => {\n      const pick = arr[Math.floor(Math.random()*arr.length)]\n      return pick \n    }\n\n    const bodyCombos = combinations.bodyCombos\n    const combo1 = () => randomPick(entries)[1]\n    // make a set here instead\n    const combo = (n) => {\n      // new set to add to\n      const arr = []\n      for (let i = 0; i < n; i++) {\n        arr.push(combo1())\n      } \n      return arr.join(' - ')\n    }\n\n    const entries = Object.entries(bodyCombos())\n    \n    const values = {\n      0: combo1(),\n      10: randomPick([combo1(),combo(2)]),\n      20: randomPick([combo1(),combo(2)],combo(3)),\n      30: randomPick([combo(2),combo(3)]),\n      40: randomPick([combo(3),combo(4)],combo(2)),\n      50: randomPick([combo(3),combo(4)]),\n      60: randomPick([combo(3),combo(4)],combo(5)),\n      70: randomPick([combo(4)],combo(5)),\n      80: randomPick([combo(4),combo(5)],combo(6)),\n      90: combo1(),\n      100: combo1()\n    }\n    \n    return values[roundedCompV]\n  }\n\n  const makeArr = (n, c) => {\n    const arr = []\n    for (let i = 0; i < n; i++) {\n      checked ? arr.push(makeBodyCombos(c)) : \n      arr.push(makeCombos(c))\n    }\n    setCombos(arr)\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    setTimer(false)\n    setTimeout(() => setTimer(true),1000)\n  };\n\n  // .MuiInputBase-root \n\n  return (\n    <Box\n    sx={{\n      bgcolor: 'background.primary',\n      color: 'text.primary',\n      display: 'flex'\n    }}\n    >\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon color=\"inherit\"/>\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            BJJ Flow Builder\n          </Typography>\n          <Switch onChange={colorMode.toggleColorMode} />\n          {theme.palette.mode}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        \n        <List>\n            <ListItem>\n                <ListItemIcon style={{color: 'inherit'}}><TagIcon/></ListItemIcon>\n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\" style={{color: 'inherit'}}>Number of Sequences</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    style={{color: 'inherit'}}\n                    value={sequenceVal}\n                    onChange={handleNumofSeqChange}\n                    >\n                    {amountArr.map(e => (\n                        <MenuItem value={e}>{e}</MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n            </ListItem>\n            <ListItem >\n                <ListItemIcon style={{color: 'inherit'}}><TimerIcon/></ListItemIcon>\n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\" style={{color: 'inherit'}}>Time per Sequence</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    style={{color: 'inherit'}}\n                    value={timePerSequence}\n                    onChange={handletimePerSequenceChange}\n                    >\n                    {timeArr.map(e => {\n                      let c=e\n                      const minute = Math.floor(e/60)\n                      const seconds = e - ((minute) * 60 )\n                      c = `${minute}:${seconds}`\n                         return <MenuItem value={e}>{c}</MenuItem>\n                    })}\n                    </Select>\n                </FormControl>\n            </ListItem>\n            <ListItem>\n              <ComplexitySlider\n                value={complexityValue}\n                setValue={setComplexityValue}\n              />\n            </ListItem>\n            <ListItem>\n              {/* <FocusSlider\n                value={focusValue}\n                setValue={setFocusValue}\n              /> */}\n              <ToggleSwitch\n              checked={checked}\n              handleToggleChange={handleToggleChange}\n              />\n            </ListItem>\n        </List>\n        <Divider />\n        <Button variant=\"contained\" className={classes.startButton} endIcon={<SendIcon />} onClick={buildFlow}>\n          Build Flow\n        </Button>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          Welcome to BJJ Flow Builder. Customize your flow by selecting from the list of options. Click 'Build my flow' and start flowing!\n        </Typography>\n        {renderStepper ? (\n          <SequenceStepper\n            activeStep={activeStep}\n            setActiveStep={setActiveStep}\n            handleNext={handleNext}\n            setTimer={setTimer}\n            setRenderStepper={setRenderStepper}\n            combos={combos}\n            timerSound={timerSound}\n            declareSequence={declareSequence}\n          />\n        ): null}\n        {\n        timer ? \n        <Timer \n          handleNext={handleNext}\n          timerSound={timerSound}\n          setTimer={setTimer}\n          timePerSequence={timePerSequence}\n          combos={combos}\n          activeStep={activeStep}\n        /> : null}\n      </main>\n    </Box>\n  );\n}\n",["81","82"],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/BaseLayout/Data.js",[],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/FlowDisplay/FlowDisplay.js",[],["83","84"],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/FlowDisplay/initial-elements.js",["85"],"import React from 'react';\nexport default [\n  {\n    id: '1',\n    type: 'input',\n    data: {\n      label: (\n        <>\n          Welcome to <strong>React Flow!</strong>\n        </>\n      ),\n    },\n    position: { x: 250, y: 0 },\n  },\n  {\n    id: '2',\n    data: {\n      label: (\n        <>\n          This is a <strong>default node</strong>\n        </>\n      ),\n    },\n    position: { x: 100, y: 100 },\n  },\n  {\n    id: '3',\n    data: {\n      label: (\n        <>\n          This one has a <strong>custom style</strong>\n        </>\n      ),\n    },\n    position: { x: 400, y: 100 },\n    style: {\n      background: '#D6D5E6',\n      color: '#333',\n      border: '1px solid #222138',\n      width: 180,\n    },\n  },\n  {\n    id: '4',\n    position: { x: 250, y: 200 },\n    data: {\n      label: 'Another default node',\n    },\n  },\n  {\n    id: '5',\n    data: {\n      label: 'Node id: 5',\n    },\n    position: { x: 250, y: 325 },\n  },\n  {\n    id: '6',\n    type: 'output',\n    data: {\n      label: (\n        <>\n          An <strong>output node</strong>\n        </>\n      ),\n    },\n    position: { x: 100, y: 480 },\n  },\n  {\n    id: '7',\n    type: 'output',\n    data: { label: 'Another output node' },\n    position: { x: 400, y: 450 },\n  },\n  { id: 'e1-2', source: '1', target: '2', label: 'this is an edge label' },\n  { id: 'e1-3', source: '1', target: '3' },\n  {\n    id: 'e3-4',\n    source: '3',\n    target: '4',\n    animated: true,\n    label: 'animated edge',\n  },\n  {\n    id: 'e4-5',\n    source: '4',\n    target: '5',\n    arrowHeadType: 'arrowclosed',\n    label: 'edge with arrow head',\n  },\n  {\n    id: 'e5-6',\n    source: '5',\n    target: '6',\n    type: 'smoothstep',\n    label: 'smooth step edge',\n  },\n  {\n    id: 'e5-7',\n    source: '5',\n    target: '7',\n    type: 'step',\n    style: { stroke: '#f6ab6c' },\n    label: 'a step edge',\n    animated: true,\n    labelStyle: { fill: '#f6ab6c', fontWeight: 700 },\n  },\n];","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/Chips.js",[],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/ComplexitySlider.js",[],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/FocusSlider.js",["86"],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\n\nexport default function FocusSlider(props) {\n  const {\n      value,\n      setValue\n  } = props\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <Box sx={{ width: 200 }}>\n        <Typography>Focus</Typography>\n        <Slider aria-label=\"Volume\" value={value} onChange={handleChange} />\n        <Grid container justifyContent=\"space-between\">\n            <Grid item>\n                Offensive\n            </Grid>\n            <Grid item>\n                Defensive\n            </Grid>\n        </Grid>\n    </Box>\n  );\n}","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/BaseLayout/BaseLayout.style.js",["87"],"import { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      background: 'inherit',\n      color: 'inherit',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    startButton: {\n        backgroundColor: '#1976d2'\n    }\n  }));\n\n  export default useStyles","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/SequenceStepper.js",["88"],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/Countdown.js",["89"],"import React from 'react';\nimport Countdown from 'react-countdown';\nimport Alarm from '../static/Alarm.m4a'\n\n\nexport default function Timer(props) {\n    const {\n        handleNext,\n        timerSound,\n        setTimer,\n        timePerSequence,\n        combos,\n        activeStep\n    } = props\n    // Random component\nconst Completionist = () => <span>You are good to go!</span>;\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  if (completed && activeStep < combos.length - 1) {\n    // Render a completed state\n    setTimer(false)\n\n    handleNext()\n    return <Completionist />;\n  } \n  else if(completed && activeStep >= combos.length-1) {\n    setTimer(false)\n    timerSound.play()\n    setTimeout(()=> timerSound.pause(),10000)\n    return <Completionist />;\n  }\n  else {\n    // Render a countdown\n    return <span>{hours}:{minutes}:{seconds}</span>;\n  }\n};\n    return (\n        <Countdown\n            date={Date.now() + timePerSequence*1000}\n            renderer={renderer}\n        />\n    )\n}","/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/ToggleSwitch.js",[],"/Users/patrickneff/Documents/code/flow-builder/flow-builder-front-end/src/Components/Sequence.style.js",[],{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"94","line":1,"column":42,"nodeType":"92","messageId":"93","endLine":1,"endColumn":52},{"ruleId":"90","severity":1,"message":"95","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":18},{"ruleId":"90","severity":1,"message":"96","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":13},{"ruleId":"90","severity":1,"message":"98","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":13},{"ruleId":"90","severity":1,"message":"99","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":24},{"ruleId":"90","severity":1,"message":"100","line":1,"column":27,"nodeType":"92","messageId":"93","endLine":1,"endColumn":40},{"ruleId":"90","severity":1,"message":"101","line":3,"column":20,"nodeType":"92","messageId":"93","endLine":3,"endColumn":31},{"ruleId":"90","severity":1,"message":"102","line":3,"column":33,"nodeType":"92","messageId":"93","endLine":3,"endColumn":46},{"ruleId":"90","severity":1,"message":"103","line":23,"column":8,"nodeType":"92","messageId":"93","endLine":23,"endColumn":19},{"ruleId":"90","severity":1,"message":"104","line":73,"column":22,"nodeType":"92","messageId":"93","endLine":73,"endColumn":35},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":1,"nodeType":"113","endLine":108,"endColumn":3},{"ruleId":"90","severity":1,"message":"114","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"90","severity":1,"message":"95","line":1,"column":22,"nodeType":"92","messageId":"93","endLine":1,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":26,"column":5,"nodeType":"117","endLine":26,"endColumn":17,"suggestions":"118"},{"ruleId":"90","severity":1,"message":"119","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useTheme' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'Chips' is defined but never used.","'ComplexitySlider' is defined but never used.","'createContext' is defined but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'FocusSlider' is defined but never used.","'setFocusValue' is assigned a value but never used.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],["120"],["121"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'Stack' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'combos.length' and 'declareSequence'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'Alarm' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},"Update the dependencies array to be: [activeStep, combos.length, declareSequence]",{"range":"125","text":"126"},[674,686],"[activeStep, combos.length, declareSequence]"]