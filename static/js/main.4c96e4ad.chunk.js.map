{"version":3,"sources":["Components/ComplexitySlider.js","BaseLayout/BaseLayout.style.js","Components/Sequence.style.js","Components/SequenceStepper.js","BaseLayout/Data.js","static/Alarm.m4a","Components/Countdown.js","Components/ToggleSwitch.js","BaseLayout/BaseLayout.js","App.js","reportWebVitals.js","index.js"],"names":["ComplexitySlider","props","value","setValue","Box","sx","width","id","gutterBottom","Grid","container","spacing","alignItems","item","xs","Slider","onChange","event","target","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","background","color","drawerClose","overflowX","breakpoints","up","toolbar","justifyContent","padding","mixins","content","flexGrow","startButton","backgroundColor","down","flexDirection","SequenceStepper","setRenderStepper","combos","setTimer","activeStep","setActiveStep","handleNext","timerSound","declareSequence","classes","React","length","steps","handleReset","pause","Stepper","className","map","label","index","Step","StepLabel","mt","mb","pt","flex","Button","onClick","disabled","prevActiveStep","setTimeout","mr","dataSet","standing","supine","seated","turtle","randomPick","arr","pick","Math","floor","random","Array","isArray","combinations","positionalCombos","positionalSituation1","position1","position2","techniqueCombos","technicalSituation","technique","bodyCombos","Timer","timePerSequence","Completionist","date","Date","now","renderer","hours","minutes","seconds","completed","play","ToggleSwitch","checked","handleToggleChange","Stack","direction","fontSize","Switch","inputProps","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","easeOut","BaseLayout","ColorModeContext","useTheme","colorMode","useContext","Audio","Alarm","useState","setOpen","sequenceVal","setSequenceVal","setTimePerSequence","complexityValue","setComplexityValue","focusValue","renderStepper","setCombos","timer","setChecked","console","log","start","stop","step","utterance","SpeechSynthesisUtterance","amountArr","from","_","timeArr","i","makeCombos","complexityV","roundedCompV","round","combos1","combos2","combos3","combos4","combos5","makeBodyCombos","combo1","entries","combo","n","push","join","Object","makeArr","c","bgcolor","CssBaseline","position","Toolbar","IconButton","edge","clsx","Typography","variant","noWrap","toggleColorMode","palette","mode","Drawer","paper","Divider","List","ListItem","ListItemIcon","style","FormControl","InputLabel","Select","labelId","e","MenuItem","minute","endIcon","paragraph","speechSynthesis","speak","createContext","App","setMode","useMemo","prevMode","createTheme","primary","amber","divider","text","grey","secondary","deepOrange","default","Provider","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c96e4ad.chunk.js","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Slider from '@mui/material/Slider';\n\nexport default function ComplexitySlider(props) {\n  const {\n      value,\n      setValue\n  } = props\n\n  const handleSliderChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Box sx={{ width: 250 }}>\n      <Typography id=\"input-slider\" gutterBottom>\n        Complexity of Components\n      </Typography>\n      <Grid container spacing={2} alignItems=\"center\">\n        <Grid item xs>\n          <Slider\n            value={typeof value === 'number' ? value : 0}\n            onChange={handleSliderChange}\n            aria-labelledby=\"input-slider\"\n          />\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}","import { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      background: 'inherit',\n      color: 'inherit',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    startButton: {\n        backgroundColor: '#1976d2'\n    }\n  }));\n\n  export default useStyles","import { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '&.MuiStepper-root': {\n            [theme.breakpoints.down('md')]: {\n            flexDirection: 'column'\n        },\n        }\n      },\n  }));\n\n  export default useStyles","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport useStyles from './Sequence.style';\n\nexport default function SequenceStepper(props) {\n  const {\n      setRenderStepper,\n      combos,\n      setTimer,\n      activeStep,\n      setActiveStep,\n      handleNext,\n      timerSound,\n      declareSequence\n  } = props\n\n  const classes = useStyles();\n\n  React.useEffect(()=>{\n    if(activeStep<combos.length){declareSequence()}\n  },[activeStep])\n  \n  const steps = combos;\n  // console.log('steps: ', steps)\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    //  reset timer\n    setTimer(false)\n    setTimeout(() => setTimer(true),1000)\n  };\n\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setRenderStepper(false)\n    setTimer(false)\n    timerSound.pause()\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Stepper activeStep={activeStep} className={classes.root}>\n        {steps.map((label, index) => {\n          const stepProps = {width: '100%'};\n          const labelProps = {};\n        \n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      {activeStep === steps.length ? (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>\n            All steps completed - you&apos;re finished\n          </Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleReset}>Reset</Button>\n          </Box>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Typography sx={{ mt: 2, mb: 1 }}>Step {activeStep + 1}</Typography>\n          <Box sx={{ display: 'flex', flexDirection: 'row', pt: 2 }}>\n            <Button\n              color=\"inherit\"\n              disabled={activeStep === 0}\n              onClick={handleBack}\n              sx={{ mr: 1 }}\n            >\n              Back\n            </Button>\n            <Button onClick={handleReset}>Reset</Button>\n          <Box sx={{ flex: '1 1 auto' }} />\n            <Button onClick={handleNext}>\n              {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n            </Button>\n          </Box>\n        </React.Fragment>\n      )}\n    </Box>\n  );\n}\n","const dataSet = {\n    positions: [\n        [\n            'Side control 1',\n            'Side control 2',\n            'Side control 3'\n        ],\n        'Crucifix',\n        'Knee on belly',\n        [\n            'Mount 1',\n            'Mount 2',\n            'S-Mount'\n        ],\n        'Rear mount',\n        'Turtle',\n        [\n            'X-guard',\n            'Single leg x',\n            'Closed guard',\n            'Butterfly guard',\n            'De la riva',\n            'Half-guard',\n            'Arm Saddle'\n        ]\n    ],\n    positionalSituations: [\n        'scramble',\n        'escape',\n        'transition'\n    ],\n    technicalSituations: [\n        'attacking',\n        'defending',\n    ],\n    techniques: [\n        'Arm bar',\n        [\n            'Arm triangle',\n            'Darce',\n            'Anaconda'\n        ],\n        'Americana',\n        'Rear Naked Choke',\n        'Lapel Choke',\n        'Guillotine',\n        'Kimura',\n        'Leg Lock',\n        'Twister',\n        [\n            'front triangle',\n            'rear triangle',\n            'wrong side triangle',\n            'reverse triangle',\n            'side triangle'\n        ],\n    ],\n    bodyMovements: {\n        standing: [\n            'sprawl',\n            'toreando',\n            'shot',\n            'swing single',\n            'down block',\n            'duck under'\n        ],\n        supine: [\n            'leg pummel',\n            'bridge',\n            'bridge and roll',\n            'shrimp',\n            'forward shrimp',\n            'leg scissor',\n            'back heist',\n            'sit up',\n            'pendulum',\n            'pancake roll',\n            'hip up triangle'\n        ],\n        seated: [\n            'forward scoot',\n            'backwards scoot',\n            'granby roll',\n            'hip heist',\n            'leg pummel',\n            'backward roll'\n        ],\n        turtle: [\n            'forward roll',\n            'sitout',\n            'inside leg standup',\n            'sit back'\n        ]\n    }\n        \n    \n}\n\nconst randomPick = (arr) => {\n    const pick = arr[Math.floor(Math.random()*arr.length)]\n    return Array.isArray(pick) ? pick[Math.floor(Math.random()*pick.length)] : pick \n}\n\nconst combinations = {\n    positionalCombos: () => {\n        const positionalSituation1 = randomPick(dataSet.positionalSituations)\n        const position1 = randomPick(dataSet.positions)\n        const position2 = randomPick(dataSet.positions)\n        const postitonalSituations = {\n            'scramble': `${positionalSituation1} to ${position1}`,\n            'escape': `${positionalSituation1} from ${position1} to ${position2}`,\n            'transition': `${positionalSituation1} from ${position1} to ${position2}`\n        }\n        return postitonalSituations[positionalSituation1]\n    },\n    techniqueCombos: () => {\n        const technicalSituation = randomPick(dataSet.technicalSituations)\n        const technique = randomPick(dataSet.techniques)\n        return `${technicalSituation} ${technique}` \n    },\n    bodyCombos: () => {\n        const standing = randomPick(dataSet.bodyMovements.standing)\n        const supine = randomPick(dataSet.bodyMovements.supine)\n        const seated = randomPick(dataSet.bodyMovements.seated)\n        const turtle = randomPick(dataSet.bodyMovements.turtle)\n        return {\n            standing,\n            supine,\n            seated,\n            turtle\n        }\n    }\n}\n\n\nexport default combinations","export default __webpack_public_path__ + \"static/media/Alarm.183d5e43.m4a\";","import React from 'react';\nimport Countdown from 'react-countdown';\nimport Alarm from '../static/Alarm.m4a'\n\n\nexport default function Timer(props) {\n    const {\n        handleNext,\n        timerSound,\n        setTimer,\n        timePerSequence,\n        combos,\n        activeStep\n    } = props\n    // Random component\nconst Completionist = () => <span>You are good to go!</span>;\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  if (completed && activeStep < combos.length - 1) {\n    // Render a completed state\n    setTimer(false)\n\n    handleNext()\n    return <Completionist />;\n  } \n  else if(completed && activeStep >= combos.length-1) {\n    setTimer(false)\n    timerSound.play()\n    setTimeout(()=> timerSound.pause(),10000)\n    return <Completionist />;\n  }\n  else {\n    // Render a countdown\n    return <span>{hours}:{minutes}:{seconds}</span>;\n  }\n};\n    return (\n        <Countdown\n            date={Date.now() + timePerSequence*1000}\n            renderer={renderer}\n        />\n    )\n}","import * as React from 'react';\nimport Switch from '@mui/material/Switch';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\n\nexport default function ToggleSwitch(props) {\n  const {\n      checked,\n      handleToggleChange\n  } = props\n\n//   const [checked, setChecked] = React.useState(true);\n\n//   const handleToggleChange = (event) => {\n//     setChecked(event.target.checked);\n//   };\n\n  return (\n    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n        <Typography sx={{fontSize: 12}}>Technique</Typography>\n        <Switch\n        checked={checked}\n        onChange={handleToggleChange}\n        inputProps={{ 'aria-label': 'controlled' }}\n        />\n        <Typography sx={{fontSize: 12}}>Body Skills</Typography>\n    </Stack>\n  );\n}","import React, { useState, createContext, useContext } from 'react';\nimport clsx from 'clsx';\nimport { useTheme, createTheme, ThemeProvider, styled  } from '@mui/material/styles';\nimport Drawer from '@material-ui/core/Drawer';\n// import AppBar from '@material-ui/core/AppBar';\nimport MuiAppBar from '@mui/material/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ComplexitySlider from '../Components/ComplexitySlider'\nimport FocusSlider from '../Components/FocusSlider';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport TimerIcon from '@mui/icons-material/Timer';\nimport TagIcon from '@mui/icons-material/Tag';\nimport useStyles from './BaseLayout.style';\nimport SequenceStepper from '../Components/SequenceStepper'\nimport combinations from './Data';\nimport Timer from '../Components/Countdown';\nimport Alarm from '../static/Alarm.m4a';\nimport ToggleSwitch from '../Components/ToggleSwitch';\nimport Switch from '@mui/material/Switch';\nimport Box from '@mui/material/Box';\n\nconst drawerWidth = 240;\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n  transition: theme.transitions.create(['margin', 'width'], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: `${drawerWidth}px`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n}));\n\n\nexport default function BaseLayout(props) {\n  const {\n      ColorModeContext\n    } = props\n  const theme = useTheme()\n  const colorMode = useContext(ColorModeContext);\n\n  \n  const classes = useStyles();\n  // const theme = useTheme();\n  const timerSound = new Audio(Alarm);\n\n  const [open, setOpen] = useState(true);\n  const [sequenceVal, setSequenceVal] = useState(1);\n  const [timePerSequence, setTimePerSequence] = useState(45);\n  const [complexityValue, setComplexityValue] = useState(30);\n  const [focusValue, setFocusValue] = useState(10);\n  const [renderStepper, setRenderStepper] = useState(false);\n  const [combos, setCombos] = React.useState([]);\n  const [timer, setTimer] = useState(false);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [checked, setChecked] = useState(true);\n\n  console.log('active step in base: ', activeStep)\n  let utterance = new SpeechSynthesisUtterance(`Sequence ${activeStep+1}`);\n  const declareSequence = () => speechSynthesis.speak(utterance)\n\n  \n  const amountArr = Array.from({length: 10}, (_, index) => index + 1);\n  const range = (start, stop, step) => Array.from({ length: (stop - start) / step + 1}, (_, i) => start + (i * step));\n  \n  const timeArr = range(45, 360, 5)\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleNumofSeqChange = (event) => {\n    setSequenceVal(event.target.value);\n  };\n\n  const handletimePerSequenceChange = (event) => {\n    setTimePerSequence(event.target.value);\n  };\n\n  const handleToggleChange = (event) => {\n    setChecked(event.target.checked);\n  };\n\n  const buildFlow = () => {\n    console.log(`\n                number of squences: ${sequenceVal}\\n\n                time per sequence: ${timePerSequence}\\n\n                complexity value: ${complexityValue}\\n\n                focus value: ${focusValue}\n              `)\n    setRenderStepper(true)\n    makeArr(sequenceVal, complexityValue)\n    setTimer(true)\n  }\n\n  const makeCombos = (complexityV) => {\n    // value will come from slider and will determine how complex the combos are\n\n    // take complexity value and give it a specific number based on a range\n    const roundedCompV = Math.round(complexityV / 10) * 10\n    \n    const positionalCombos = combinations.positionalCombos\n    const techniqueCombos = combinations.techniqueCombos\n    const combos1 = () => positionalCombos()+` - `+techniqueCombos()\n    const combos2 = () => combos1()+` - `+positionalCombos()\n    const combos3 = () => combos1()+` - `+techniqueCombos()\n    const combos4 = () => combos1()+` - `+combos1()\n    const combos5 = () => combos1()+` - `+combos3()\n\n    const randomPick = (arr) => {\n      const pick = arr[Math.floor(Math.random()*arr.length)]\n      return pick \n    }\n\n    const values = {\n      0: randomPick([positionalCombos(),techniqueCombos()]),\n      10: randomPick([positionalCombos(),techniqueCombos(),combos1()]),\n      20: combos1(),\n      30: randomPick([combos1(),combos2()]),\n      40: randomPick([combos1(),combos2(),combos3()]),\n      50: randomPick([combos1(),combos2(),combos3(),combos4()]),\n      60: randomPick([combos2(),combos3(),combos4()]),\n      70: randomPick([combos2(),combos3(),combos4(),combos5()]),\n      80: randomPick([combos2(),combos3(),combos4(),combos5()])+` - `+combos1(),\n      90: randomPick([combos4(),combos5()])+` - `+randomPick([combos2(),combos3()]),\n      100: randomPick([combos4(),combos5()])+` - `+randomPick([combos4(),combos5()])\n    }\n    return values[roundedCompV]\n  }\n\n  const makeBodyCombos = (complexityV) => {\n    // value will come from slider and will determine how complex the combos are\n\n    // take complexity value and give it a specific number based on a range\n    const roundedCompV = Math.round(complexityV / 10) * 10\n\n    const randomPick = (arr) => {\n      const pick = arr[Math.floor(Math.random()*arr.length)]\n      return pick \n    }\n\n    const bodyCombos = combinations.bodyCombos\n    const combo1 = () => randomPick(entries)[1]\n    // make a set here instead\n    const combo = (n) => {\n      // new set to add to\n      const arr = []\n      for (let i = 0; i < n; i++) {\n        arr.push(combo1())\n      } \n      return arr.join(' - ')\n    }\n\n    const entries = Object.entries(bodyCombos())\n    \n    const values = {\n      0: combo1(),\n      10: randomPick([combo1(),combo(2)]),\n      20: randomPick([combo1(),combo(2)],combo(3)),\n      30: randomPick([combo(2),combo(3)]),\n      40: randomPick([combo(3),combo(4)],combo(2)),\n      50: randomPick([combo(3),combo(4)]),\n      60: randomPick([combo(3),combo(4)],combo(5)),\n      70: randomPick([combo(4)],combo(5)),\n      80: randomPick([combo(4),combo(5)],combo(6)),\n      90: combo1(),\n      100: combo1()\n    }\n    \n    return values[roundedCompV]\n  }\n\n  const makeArr = (n, c) => {\n    const arr = []\n    for (let i = 0; i < n; i++) {\n      checked ? arr.push(makeBodyCombos(c)) : \n      arr.push(makeCombos(c))\n    }\n    setCombos(arr)\n  }\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n    setTimer(false)\n    setTimeout(() => setTimer(true),1000)\n  };\n\n  // .MuiInputBase-root \n\n  return (\n    <Box\n    sx={{\n      bgcolor: 'background.primary',\n      color: 'text.primary',\n      display: 'flex'\n    }}\n    >\n      <CssBaseline />\n      <AppBar position=\"fixed\" open={open}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon color=\"inherit\"/>\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            BJJ Flow Builder\n          </Typography>\n          <Switch onChange={colorMode.toggleColorMode} />\n          {theme.palette.mode}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        \n        <List>\n            <ListItem>\n                <ListItemIcon style={{color: 'inherit'}}><TagIcon/></ListItemIcon>\n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\" style={{color: 'inherit'}}>Number of Sequences</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    style={{color: 'inherit'}}\n                    value={sequenceVal}\n                    onChange={handleNumofSeqChange}\n                    >\n                    {amountArr.map(e => (\n                        <MenuItem value={e}>{e}</MenuItem>\n                    ))}\n                    </Select>\n                </FormControl>\n            </ListItem>\n            <ListItem >\n                <ListItemIcon style={{color: 'inherit'}}><TimerIcon/></ListItemIcon>\n                <FormControl >\n                    <InputLabel id=\"demo-simple-select-label\" style={{color: 'inherit'}}>Time per Sequence</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    style={{color: 'inherit'}}\n                    value={timePerSequence}\n                    onChange={handletimePerSequenceChange}\n                    >\n                    {timeArr.map(e => {\n                      let c=e\n                      const minute = Math.floor(e/60)\n                      const seconds = e - ((minute) * 60 )\n                      c = `${minute}:${seconds}`\n                         return <MenuItem value={e}>{c}</MenuItem>\n                    })}\n                    </Select>\n                </FormControl>\n            </ListItem>\n            <ListItem>\n              <ComplexitySlider\n                value={complexityValue}\n                setValue={setComplexityValue}\n              />\n            </ListItem>\n            <ListItem>\n              {/* <FocusSlider\n                value={focusValue}\n                setValue={setFocusValue}\n              /> */}\n              <ToggleSwitch\n              checked={checked}\n              handleToggleChange={handleToggleChange}\n              />\n            </ListItem>\n        </List>\n        <Divider />\n        <Button variant=\"contained\" className={classes.startButton} endIcon={<SendIcon />} onClick={buildFlow}>\n          Build Flow\n        </Button>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          Welcome to BJJ Flow Builder. Customize your flow by selecting from the list of options. Click 'Build my flow' and start flowing!\n        </Typography>\n        {renderStepper ? (\n          <SequenceStepper\n            activeStep={activeStep}\n            setActiveStep={setActiveStep}\n            handleNext={handleNext}\n            setTimer={setTimer}\n            setRenderStepper={setRenderStepper}\n            combos={combos}\n            timerSound={timerSound}\n            declareSequence={declareSequence}\n          />\n        ): null}\n        {\n        timer ? \n        <Timer \n          handleNext={handleNext}\n          timerSound={timerSound}\n          setTimer={setTimer}\n          timePerSequence={timePerSequence}\n          combos={combos}\n          activeStep={activeStep}\n        /> : null}\n      </main>\n    </Box>\n  );\n}\n","import React, { useState, createContext, useContext } from 'react'\nimport { useTheme, createTheme, ThemeProvider  } from '@mui/material/styles';\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport BaseLayout from './BaseLayout/BaseLayout';\nimport Chips from './Components/Chips';\nimport ComplexitySlider from './Components/ComplexitySlider';\nimport { amber, deepOrange, grey } from '@mui/material/colors';\n\nconst ColorModeContext = createContext({ toggleColorMode: () => {} });\n\nfunction App() {\n\n  const [mode, setMode] = React.useState('light');\n  const colorMode = React.useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n      },\n    }),\n    [],\n  );\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode,\n          ...(mode === 'light'\n      ? {\n          // palette values for light mode\n          primary: amber,\n          divider: amber[200],\n          text: {\n            primary: grey[900],\n            secondary: grey[800],\n          },\n        }\n      : {\n          // palette values for dark mode\n          primary: deepOrange,\n          divider: deepOrange[700],\n          background: {\n            primary: '#212121',\n            default: deepOrange[900],\n            paper: deepOrange[900],\n          },\n          text: {\n            primary: grey[200],\n            secondary: grey[400],\n          },\n        }),\n        },\n      }),\n    [mode],\n  );\n\n  return (\n    <ColorModeContext.Provider value={colorMode}>\n      <ThemeProvider theme={theme}>\n        <BaseLayout\n        ColorModeContext={ColorModeContext}\n        />\n       </ThemeProvider>\n     </ColorModeContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}